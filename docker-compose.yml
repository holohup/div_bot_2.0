services:
  redis:
    image: redis:latest
    restart: always
    volumes:
      - ./redis/data:/data
    command: ["redis-server", "--save 60 1",  "--loglevel warning"]
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 10
    networks:
      - div_counter_network
  
  tcs_api_accessor:
    env_file:
      - TCSApiAccessor/.env.example
    build:
      context: TCSApiAccessor
      # uncomment the next line to run on a Raspberry Pi
      # dockerfile: Dockerfile_raspberry_pi
    networks:
      - div_counter_network

  redis_accessor:
    build:
      context: RedisAccessor
    networks: 
      - div_counter_network
    depends_on:
      redis:
        condition: service_healthy

  log_accessor:
    build:
      context: LogAccessor
    volumes:
      - ./log.txt:/app/log.txt
    networks: 
      - div_counter_network
    depends_on:
      - redis_accessor

  div_counter_manager:
    build:
      context: DivCounterManager
    ports:
      - 8005:8000
    networks:
      - div_counter_network
    depends_on:
      - redis_accessor
      - tcs_api_accessor

networks:
  div_counter_network:
    driver: bridge
