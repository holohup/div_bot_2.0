services:
  redis:
    image: redis:latest
    restart: always
    volumes:
      - ./redis/data:/data
    command: ["redis-server", "--save 60 1",  "--loglevel warning"]
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 10
    networks:
      - div_counter_network
  
  tcs_api_accessor:
    env_file:
      - TCSApiAccessor/.env.example
    build:
      context: TCSApiAccessor
      # uncomment the next line to run on a Raspberry Pi
      # dockerfile: Dockerfile_raspberry_pi
    networks:
      - div_counter_network
  tcs_api_accessor-dapr:
    image: "daprio/daprd:edge"
    deploy:
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 10
        window: 120s
    command: [
      "./daprd",
      "--app-id", "tcs_api_accessor",
      "--app-port", "8000",
      # "--placement-host-address", "placement:50006",
      "--resources-path", "./components"
    ]
    volumes:
        - "./components/:/components"
    depends_on:
      - tcs_api_accessor
    network_mode: "service:tcs_api_accessor"

  redis_accessor:
    build:
      context: RedisAccessor
    networks: 
      - div_counter_network
    depends_on:
      # placement:
      #   condition: service_started
      redis:
        condition: service_healthy
  redis_accessor-dapr:
    image: "daprio/daprd:edge"
    deploy:
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 10
        window: 120s
    command: [
      "./daprd",
      "--app-id", "redis_accessor",
      "--app-port", "50051",
      # "--placement-host-address", "placement:50006",
      "--resources-path", "./components"
    ]
    volumes:
        - "./components/:/components"
    depends_on:
      - redis_accessor
    network_mode: "service:redis_accessor"

  log_accessor:
    build:
      context: LogAccessor
    volumes:
      - ./log.txt:/app/log.txt
    networks: 
      - div_counter_network
    depends_on:
      - redis_accessor
  log_accessor-dapr:
    image: "daprio/daprd:edge"
    deploy:
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 10
        window: 120s
    command: [
      "./daprd",
      "--app-id", "log_accessor",
      "--app-port", "8001",
      # "--placement-host-address", "placement:50006",
      "--resources-path", "./components"
    ]
    volumes:
        - "./components/:/components"
    depends_on:
      - log_accessor
    network_mode: "service:log_accessor"
  
  div_counter_manager:
    build:
      context: DivCounterManager
    ports:
      - 8005:8005
    networks:
      - div_counter_network
    depends_on:
      - redis_accessor
      - tcs_api_accessor
  div_counter_manager-dapr:
    image: "daprio/daprd:edge"
    deploy:
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 10
        window: 120s
    command: [
      "./daprd",
      "--app-id", "div_counter_manager",
      "--app-port", "8005",
      # "--placement-host-address", "placement:50006",
      "--resources-path", "./components"
    ]
    volumes:
        - "./components/:/components"
    depends_on:
      - div_counter_manager
    network_mode: "service:div_counter_manager"

  # placement:
  #   image: "daprio/dapr"
  #   command: ["./placement", "-port", "50006"]
  #   ports:
  #     - "50006:50006"
  #   networks:
  #     - div_counter_network

networks:
  div_counter_network:
    driver: bridge
